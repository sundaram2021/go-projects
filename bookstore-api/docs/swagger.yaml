basePath: /api/v1
definitions:
  models.Book:
    properties:
      author:
        type: string
      id:
        type: string
      price:
        type: number
      title:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample Bookstore API using Gin framework.
  title: BookStore API
  version: "1.0"
paths:
  /books:
    get:
      description: Get details of all books
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Book'
            type: array
      summary: Get all books
      tags:
      - books
    post:
      consumes:
      - application/json
      description: Add a new book to the store
      parameters:
      - description: Book Data
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.Book'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Book'
      summary: Create a book
      tags:
      - books
  /books/{id}:
    delete:
      description: Delete a book by ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: Delete a book
      tags:
      - books
    put:
      consumes:
      - application/json
      description: Update book details by ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated Book Data
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.Book'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
      summary: Update a book
      tags:
      - books
swagger: "2.0"
